{
    "swagger": "2.0",
    "info": {
        "description": "Reference Golang API",
        "title": "Reference Golang API",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/entities/": {
            "get": {
                "description": "Gets all Entities in DB",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entities"
                ],
                "summary": "Gets all Entities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Entity"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates new Entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entities"
                ],
                "summary": "Creates new Entity",
                "parameters": [
                    {
                        "description": "Entity to update",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Entity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New Entity",
                        "schema": {
                            "$ref": "#/definitions/entity.Entity"
                        }
                    }
                }
            }
        },
        "/api/v1/entities/{id}": {
            "get": {
                "description": "Gets an entity by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entities"
                ],
                "summary": "Gets an entity by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID to load",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Entity"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseData"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates an entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entities"
                ],
                "summary": "Updates an entity",
                "parameters": [
                    {
                        "description": "Entity to update",
                        "name": "entity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Entity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Entity"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an entity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Entities"
                ],
                "summary": "Deletes an entity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Entity ID to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Entity"
                        }
                    },
                    "404": {
                        "description": "Can not find ID",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseData"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Entity": {
            "type": "object",
            "required": [
                "date",
                "name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.EntityItem"
                    }
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 0
                }
            }
        },
        "entity.EntityItem": {
            "type": "object",
            "required": [
                "item-name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "item-name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "utils.ResponseData": {
            "type": "object",
            "properties": {
                "data": {},
                "meta": {},
                "status": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}