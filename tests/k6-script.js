// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/expect.js";
import "./libs/shim/urijs.js";
import { group } from "k6";

export let options = {
  maxRedirects: 4,
  duration: '10m',
  vus: 50,
};

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options,
  collection: {
    baseUrl: "http://localhost:8080",
    id: "",
    json: ""
  }
});

export default function() {
  group("api/v1/entities", function() {
    postman[Request]({
      name: "Creates new Entity",
      method: "POST",
      address: "{{baseUrl}}/api/v1/entities/",
      data:
          '{\n    "date": "2014-09-12T11:45:26.371Z",\n    "name": "dolor veniam labore",\n    "value": 23,\n    "items": [\n        {\n            "item-name": "ipsum tempor "\n        },\n        {\n            "item-name": "quis ullamco laboris aute ipsum"\n        }\n    ]\n}',
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
        pm.test("Check created ID", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData.ID).to.greaterThan(0);
          pm.collectionVariables.set("id", jsonData.ID);
          pm.collectionVariables.set("json", JSON.stringify(jsonData, null, 4));
        });
      }
    });

    postman[Request]({
      name: "Gets all Entities",
      method: "GET",
      address: "{{baseUrl}}/api/v1/entities/",
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });

        pm.test("Check received ID #1", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData[0].ID).to.greaterThan(0);
        });
      }
    });

    postman[Request]({
      name: "Gets an entity by ID",
      method: "GET",
      address: "{{baseUrl}}/api/v1/entities/{{id}}",
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
        pm.test("Check received ID", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData.ID).to.greaterThan(0);
        });
      }
    });

    postman[Request]({
      name: "Updates an entity",
      method: "PUT",
      address: "{{baseUrl}}/api/v1/entities/{{id}}",
      data: "{{json}}",
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
        pm.test("Check received ID", function() {
          var jsonData = pm.response.json();
          pm.expect(jsonData.ID).to.greaterThan(0);
        });
      }
    });

    postman[Request]({
      name: "Deletes an entity",
      method: "DELETE",
      address: "{{baseUrl}}/api/v1/entities/{{id}}",
      post(response) {
        pm.test("Status code is 200", function() {
          pm.response.to.have.status(200);
        });
      }
    });
  });
}
